/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/modals/init-modals */ "./js/modules/modals/init-modals.js");
/* harmony import */ var _modules_modals_init_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modals/init-forms */ "./js/modules/modals/init-forms.js");
/* harmony import */ var _modules_modals_footer_links__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/modals/footer-links */ "./js/modules/modals/footer-links.js");
/* harmony import */ var _modules_modals_footer_links__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_modules_modals_footer_links__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _modules_modals_advantages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/modals/advantages */ "./js/modules/modals/advantages.js");
/* harmony import */ var _modules_modals_advantages__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_modules_modals_advantages__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _modules_modals_about_more__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/modals/about-more */ "./js/modules/modals/about-more.js");
/* harmony import */ var _modules_modals_about_more__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_modules_modals_about_more__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _modules_modals_link_scroll__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/modals/link-scroll */ "./js/modules/modals/link-scroll.js");
/* harmony import */ var _modules_modals_link_scroll__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_modules_modals_link_scroll__WEBPACK_IMPORTED_MODULE_5__);





 // ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------
  Object(_modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_0__["initModals"])();
  Object(_modules_modals_init_forms__WEBPACK_IMPORTED_MODULE_1__["initForms"])(); // Modules
  // ---------------------------------
  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана

  window.addEventListener('load', function () {});
}); // для адаптивного JS используейтся matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

/***/ }),

/***/ "./js/modules/modals/about-more.js":
/*!*****************************************!*\
  !*** ./js/modules/modals/about-more.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var aboutMoreBtn = document.querySelector('[data-link-more]');
var textMore = document.querySelector('.about__text-inactive');
var aboutWrapper = document.querySelector('.about__wrapper');

var onMoreBtnClick = function onMoreBtnClick(evt) {
  evt.preventDefault();
  aboutMoreBtn.classList.toggle('about__link--active');
  textMore.classList.toggle('about__text-inactive');
  aboutWrapper.classList.toggle('about__wrapper--active-text');
};

var activateMoreBtn = function activateMoreBtn() {
  if (aboutMoreBtn && textMore) {
    aboutMoreBtn.addEventListener('click', onMoreBtnClick);
  }
};

activateMoreBtn();

/***/ }),

/***/ "./js/modules/modals/advantages.js":
/*!*****************************************!*\
  !*** ./js/modules/modals/advantages.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var advantagesCards = document.querySelectorAll('[data-advantage-card]');

var onAdvantgeCardClick = function onAdvantgeCardClick(evt) {
  var advantageCard = evt.target.closest('.advantages__item');
  advantagesCards.forEach(function (card) {
    if (card.getAttribute('data-advantage-card') !== advantageCard.getAttribute('data-advantage-card')) {
      card.classList.remove('advantages__item--active');
    }
  });

  if (advantageCard) {
    advantageCard.classList.toggle('advantages__item--active');
  }
};

var activateAdvantagesCards = function activateAdvantagesCards() {
  if (advantagesCards.length) {
    advantagesCards.forEach(function (card) {
      return card.addEventListener('click', onAdvantgeCardClick);
    });
  }
};

activateAdvantagesCards();

/***/ }),

/***/ "./js/modules/modals/footer-links.js":
/*!*******************************************!*\
  !*** ./js/modules/modals/footer-links.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var footerLinks = document.querySelectorAll('.footer-links');
var linksSwitcher = document.querySelectorAll('[data-footer-switcher]');
var isExist = linksSwitcher.length && footerLinks.length;

var onLinkSwitcherClick = function onLinkSwitcherClick(evt) {
  var links = evt.target.closest('.footer-links');
  linksSwitcher.forEach(function (link) {
    if (evt.target.getAttribute('data-footer-switcher') !== link.getAttribute('data-footer-switcher')) {
      link.closest('.footer-links').classList.add('footer-links--inactive');
      link.closest('.footer-links').classList.remove('footer-links--active');
    }
  });

  if (links) {
    links.classList.toggle('footer-links--inactive');
    links.classList.toggle('footer-links--active');
  }
};

var activateLinksSwitchers = function activateLinksSwitchers() {
  if (isExist) {
    footerLinks.forEach(function (links) {
      return links.classList.add('footer-links--inactive');
    });
    linksSwitcher.forEach(function (link) {
      link.addEventListener('click', onLinkSwitcherClick);
    });
  }
};

activateLinksSwitchers();

/***/ }),

/***/ "./js/modules/modals/forms.js":
/*!************************************!*\
  !*** ./js/modules/modals/forms.js ***!
  \************************************/
/*! exports provided: Forms */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Forms", function() { return Forms; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var Forms = /*#__PURE__*/function () {
  function Forms(form) {
    _classCallCheck(this, Forms);

    this.form = form;
    this.phoneField = form.querySelector('input[type="tel"]');
    this.nameField = form.querySelector('input[type="text"]');
    this.questionField = form.querySelector('textarea');
    this.isStorageSupport = true;
    this.storagePhone = '';
    this.storageQuestion = '';
    this.storageName = '';
    this.activatePhoneMask = this.activatePhoneMask.bind(this);
    this.activateFormValid = this.activateFormValid.bind(this);
    this.checkPhoneMask = this.checkPhoneMask.bind(this);
    this.checkNameField = this.checkNameField.bind(this);
    this.useLocalStorage = this.useLocalStorage.bind(this);
    this.activateLocalStorage = this.activateLocalStorage.bind(this);
    this.init();
  }

  _createClass(Forms, [{
    key: "init",
    value: function init() {
      if (this.phoneField) {
        this.activatePhoneMask();
      }

      this.activateLocalStorage();
      this.activateFormValid();
    }
  }, {
    key: "checkPhoneMask",
    value: function checkPhoneMask(evt) {
      var el = evt.target;
      var clearVal = el.dataset.phoneClear;
      var pattern = el.dataset.phonePattern;
      var martixDef = '+7 (___) ___-__-__';
      var matrix = pattern ? pattern : martixDef;
      var i = 0;
      var def = matrix.replace(/\D/g, '');
      var val = evt.target.value.replace(/\D/g, '');

      if (clearVal !== 'false' && evt.type === 'blur') {
        if (val.length < matrix.match(/([\_\d])/g).length) {
          evt.target.value = '';
          evt.target.classList.add('input--error');
          return;
        }
      }

      if (def.length >= val.length) {
        val = def;
      }

      evt.target.value = matrix.replace(/./g, function (char) {
        if (/[_\d]/.test(char) && i < val.length) {
          evt.target.classList.remove('input--error');
          return val.charAt(i++);
        } else if (i >= val.length) {
          return '';
        }

        return char;
      });
    }
  }, {
    key: "activatePhoneMask",
    value: function activatePhoneMask() {
      for (var _i = 0, _arr = ['input', 'blur', 'focus']; _i < _arr.length; _i++) {
        var ev = _arr[_i];
        this.phoneField.addEventListener(ev, this.checkPhoneMask);
      }
    }
  }, {
    key: "activateLocalStorage",
    value: function activateLocalStorage() {
      try {
        if (this.phoneField) {
          this.storagePhone = localStorage.getItem("".concat(this.phoneField.getAttribute('id')));
        }

        if (this.questionField) {
          this.storageQuestion = localStorage.getItem("".concat(this.questionField.getAttribute('id')));
        }

        if (this.nameField) {
          this.storageName = localStorage.getItem("".concat(this.nameField.getAttribute('id')));
        }
      } catch (err) {
        this.isStorageSupport = false;
      }
    }
  }, {
    key: "checkNameField",
    value: function checkNameField(evt) {
      if (evt.target.value === '') {
        evt.target.classList.add('input--error');
      } else {
        evt.target.classList.remove('input--error');
      }
    }
  }, {
    key: "useLocalStorage",
    value: function useLocalStorage() {
      if (this.isStorageSupport) {
        if (this.phoneField) {
          localStorage.setItem("".concat(this.phoneField.getAttribute('id')), this.phoneField.value);
        }

        if (this.nameField) {
          localStorage.setItem("".concat(this.nameField.getAttribute('id')), this.nameField.value);
        }

        if (this.questionField) {
          localStorage.setItem("".concat(this.questionField.getAttribute('id')), this.questionField.value);
        }
      }
    }
  }, {
    key: "activateFormValid",
    value: function activateFormValid() {
      if (!this.form) {
        return;
      }

      if (this.storagePhone && this.phoneField) {
        this.phoneField.value = this.storagePhone;
      } else {
        this.phoneField.value = '';
      }

      if (this.storageName && this.nameField) {
        this.nameField.value = this.storageName;
      }

      if (this.storageQuestion && this.questionField) {
        this.questionField.value = this.storageQuestion;
      }

      if (this.nameField) {
        this.nameField.addEventListener('input', this.checkNameField);
      }

      this.form.addEventListener('submit', this.useLocalStorage);
    }
  }]);

  return Forms;
}();

/***/ }),

/***/ "./js/modules/modals/init-forms.js":
/*!*****************************************!*\
  !*** ./js/modules/modals/init-forms.js ***!
  \*****************************************/
/*! exports provided: forms, initForms */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forms", function() { return forms; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initForms", function() { return initForms; });
/* harmony import */ var _forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./forms */ "./js/modules/modals/forms.js");

var forms;

var initForms = function initForms() {
  forms = document.querySelectorAll('.main-form');

  if (forms.length) {
    forms.forEach(function (form) {
      forms = new _forms__WEBPACK_IMPORTED_MODULE_0__["Forms"](form);
    });
  }

  window.forms = forms;
};



/***/ }),

/***/ "./js/modules/modals/init-modals.js":
/*!******************************************!*\
  !*** ./js/modules/modals/init-modals.js ***!
  \******************************************/
/*! exports provided: modals, initModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modals", function() { return modals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initModals", function() { return initModals; });
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals */ "./js/modules/modals/modals.js");

var modals;
var settings = {
  'default': {
    preventDefault: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  }
};

var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');
  modalElements.forEach(function (el) {
    setTimeout(function () {
      el.classList.remove('modal--preload');
    }, 100);
  });
  modals = new _modals__WEBPACK_IMPORTED_MODULE_0__["Modals"](settings); // Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда

  window.modals = modals;
};



/***/ }),

/***/ "./js/modules/modals/link-scroll.js":
/*!******************************************!*\
  !*** ./js/modules/modals/link-scroll.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var linksWithScroll = document.querySelectorAll('[data-link-scroll]');

var scrollToElement = function scrollToElement(evt) {
  var id = evt.target.closest('a').getAttribute('href');
  var elementToGo = id.length > 1 ? document.querySelector(id) : null;

  if (id.length > 1) {
    evt.preventDefault();
  }

  if (elementToGo) {
    elementToGo.scrollIntoView({
      behavior: 'smooth',
      block: 'start'
    });
  }
};

var activateScroll = function activateScroll() {
  if (linksWithScroll.length) {
    linksWithScroll.forEach(function (link) {
      return link.addEventListener('click', scrollToElement);
    });
  }
};

activateScroll();

/***/ }),

/***/ "./js/modules/modals/modals.js":
/*!*************************************!*\
  !*** ./js/modules/modals/modals.js ***!
  \*************************************/
/*! exports provided: Modals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modals", function() { return Modals; });
/* harmony import */ var _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/scroll-lock */ "./js/utils/scroll-lock.js");
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock */ "./js/utils/focus-lock.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }



var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Modals);

    this.scrollLock = new _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__["ScrollLock"]();
    this.focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__["FocusLock"]();
    this.modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this.focusField = document.querySelector('[data-open-focus]');
    this.openedModalElement = null;
    this.modalName = null;
    this.enableScrolling = true;
    this.settingKey = 'default';
    this.settings = settings;
    this.preventDefault = this.settings[this.settingKey].preventDefault;
    this.lockFocus = this.settings[this.settingKey].lockFocus;
    this.startFocus = this.settings[this.settingKey].startFocus;
    this.focusBack = this.settings[this.settingKey].focusBack;
    this.eventTimeout = this.settings[this.settingKey].eventTimeout;
    this.openCallback = this.settings[this.settingKey].openCallback;
    this.closeCallback = this.settings[this.settingKey].closeCallback;
    this.documentKeydownHandler = this.documentKeydownHandler.bind(this);
    this.documentClickHandler = this.documentClickHandler.bind(this);
    this.modalClickHandler = this.modalClickHandler.bind(this);
    this.init();
  }

  _createClass(Modals, [{
    key: "init",
    value: function init() {
      if (this.modalOpenElements.length) {
        document.addEventListener('click', this.documentClickHandler);
      }
    }
  }, {
    key: "setSettings",
    value: function setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.settingKey;

      if (!this.settings[settingKey]) {
        return;
      }

      this.preventDefault = typeof this.settings[settingKey].preventDefault === 'boolean' ? this.settings[settingKey].preventDefault : this.settings[this.settingKey].preventDefault;
      this.lockFocus = typeof this.settings[settingKey].lockFocus === 'boolean' ? this.settings[settingKey].lockFocus : this.settings[this.settingKey].lockFocus;
      this.startFocus = typeof this.settings[settingKey].startFocus === 'boolean' ? this.settings[settingKey].startFocus : this.settings[this.settingKey].startFocus;
      this.focusBack = typeof this.settings[settingKey].lockFocus === 'boolean' ? this.settings[settingKey].focusBack : this.settings[this.settingKey].focusBack;
      this.eventTimeout = typeof this.settings[settingKey].eventTimeout === 'number' ? this.settings[settingKey].eventTimeout : this.settings[this.settingKey].eventTimeout;
      this.openCallback = this.settings[settingKey].openCallback || this.settings[this.settingKey].openCallback;
      this.closeCallback = this.settings[settingKey].closeCallback || this.settings[this.settingKey].closeCallback;
    }
  }, {
    key: "documentClickHandler",
    value: function documentClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-open-modal]')) {
        return;
      }

      evt.preventDefault();
      this.modalName = target.closest('[data-open-modal]').dataset.openModal;

      if (!this.modalName) {
        return;
      }

      this.open();
    }
  }, {
    key: "documentKeydownHandler",
    value: function documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';

      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "modalClickHandler",
    value: function modalClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-close-modal]')) {
        return;
      }

      this.close(target.closest('[data-modal]').dataset.modal);
    }
  }, {
    key: "addListeners",
    value: function addListeners(modal) {
      modal.addEventListener('click', this.modalClickHandler);
      document.addEventListener('keydown', this.documentKeydownHandler);
    }
  }, {
    key: "removeListeners",
    value: function removeListeners(modal) {
      modal.removeEventListener('click', this.modalClickHandler);
      document.removeEventListener('keydown', this.documentKeydownHandler);
    }
  }, {
    key: "open",
    value: function open() {
      var _this = this;

      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));

      if (!modal || modal.classList.contains('is-active')) {
        return;
      }

      document.removeEventListener('click', this.documentClickHandler);
      this.openedModalElement = document.querySelector('.modal.is-active');

      if (this.openedModalElement) {
        this.enableScrolling = false;
        this.close(this.openedModalElement.dataset.modal);
      }

      this.setSettings(modalName);
      modal.classList.add('is-active');

      if (this.focusField && modal.classList.contains('is-active')) {
        setTimeout(function () {
          _this.focusField.focus();
        }, 200);
      }

      if (!this.openedModalElement) {
        this.scrollLock.disableScrolling();
      }

      if (this.openCallback) {
        this.openCallback();
      }

      if (this.lockFocus) {
        this.focusLock.lock('.modal.is-active', this.startFocus);
      }

      setTimeout(function () {
        _this.addListeners(modal);

        document.addEventListener('click', _this.documentClickHandler);
      }, this.eventTimeout);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;

      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      document.removeEventListener('click', this.documentClickHandler);

      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }

      if (this.lockFocus) {
        this.focusLock.unlock(this.focusBack);
      }

      modal.classList.remove('is-active');
      this.removeListeners(modal);

      if (this.closeCallback) {
        this.closeCallback();
      }

      if (this.enableScrolling) {
        setTimeout(function () {
          _this2.scrollLock.enableScrolling();
        }, this.eventTimeout);
      }

      setTimeout(function () {
        document.addEventListener('click', _this2.documentClickHandler);
      }, this.eventTimeout);
      this.setSettings('default');
      this.enableScrolling = true;
    }
  }]);

  return Modals;
}();

/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/*! exports provided: FocusLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusLock", function() { return FocusLock; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);

    this.lockedSelector = null;
    this.focusableElements = null;
    this.endElement = null;
    this.selectors = SELECTORS;
    this.documentKeydownHandler = this.documentKeydownHandler.bind(this);
  }

  _createClass(FocusLock, [{
    key: "documentKeydownHandler",
    value: function documentKeydownHandler(evt) {
      var activeElement = document.activeElement;

      if (evt.key === 'Tab') {
        if (!this.focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }

        if (this.focusableElements.length === 1) {
          evt.preventDefault();
          this.focusableElements[0].focus();
          return;
        }

        if (this.focusableElements.length > 1 && !activeElement.closest(this.lockedSelector)) {
          evt.preventDefault();
          this.focusableElements[0].focus();
          return;
        }
      }

      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this.focusableElements[this.focusableElements.length - 1]) {
        evt.preventDefault();
        this.focusableElements[0].focus();
      }

      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this.focusableElements[0]) {
        evt.preventDefault();
        this.focusableElements[this.focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this.lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this.lockedSelector);

      if (!lockedElement) {
        return;
      }

      this.focusableElements = lockedElement.querySelectorAll(this.selectors);
      this.endElement = document.activeElement;
      var startElement = lockedElement.querySelector('[data-focus]') || this.focusableElements[0];

      if (this.endElement) {
        this.endElement.blur();
      }

      if (startElement && startFocus) {
        startElement.focus();
      }

      document.addEventListener('keydown', this.documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      if (this.endElement && returnFocus) {
        this.endElement.focus();
      }

      this.lockedSelector = null;
      this.focusableElements = null;
      this.endElement = null;
      document.removeEventListener('keydown', this.documentKeydownHandler);
    }
  }]);

  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/scroll-lock.js":
/*!*********************************!*\
  !*** ./js/utils/scroll-lock.js ***!
  \*********************************/
/*! exports provided: ScrollLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollLock", function() { return ScrollLock; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var ScrollLock = /*#__PURE__*/function () {
  function ScrollLock() {
    _classCallCheck(this, ScrollLock);

    this.iosChecker = _ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"];
    this.lockClass = this.iosChecker() ? 'scroll-lock-ios' : 'scroll-lock';
    this.fixedBlockElements = document.querySelectorAll('[data-fix-block]');
    this.sections = document.querySelectorAll('[data-block]');
  }

  _createClass(ScrollLock, [{
    key: "getScrollbarWidth",
    value: function getScrollbarWidth() {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  }, {
    key: "disableScrolling",
    value: function disableScrolling() {
      var _this = this;

      if (this.getScrollbarWidth()) {
        this.sections.forEach(function (section) {
          var sectionPaddingRight = getComputedStyle(section).paddingRight;
          var sectionBackImageExist = getComputedStyle(section).backgroundImage !== 'none';

          if (!sectionBackImageExist) {
            section.style.paddingRight = "".concat(parseInt(sectionPaddingRight, 10) + _this.getScrollbarWidth(), "px");
          } else {
            section.style.backgroundSize = "calc(100% - ".concat(_this.getScrollbarWidth(), "px) 100%");
            section.style.paddingRight = "".concat(parseInt(sectionPaddingRight, 10) + _this.getScrollbarWidth(), "px");
          }
        });
        this.fixedBlockElements.forEach(function (block) {
          block.style.paddingRight = "".concat(_this.getScrollbarWidth(), "px");
        });
      }

      document.body.classList.add(this.lockClass);
    }
  }, {
    key: "enableScrolling",
    value: function enableScrolling() {
      document.body.classList.remove(this.lockClass);
      this.sections.forEach(function (section) {
        var sectionBackImageExist = getComputedStyle(section).backgroundImage !== 'none';

        if (!sectionBackImageExist) {
          section.style.paddingRight = null;
        } else {
          section.style.backgroundSize = null;
          section.style.backgroundPosition = null;
          section.style.paddingRight = null;
        }
      });
      document.body.style.top = null;
      this.fixedBlockElements.forEach(function (block) {
        block.style.paddingRight = null;
      });
    }
  }]);

  return ScrollLock;
}();
window.scrollLock = new ScrollLock();

/***/ })

/******/ });